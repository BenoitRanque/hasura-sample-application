version: "3.8"
services:
  postgres:
    image: postgres:13
    ports:
      - 5432:5432
    restart: always
    volumes:
      - ./postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_DB: ${POSTGRES_DB}
  business-logic:
    image: business-logic:prod
    build:
      context: ./business-logic
      args:
        NODE_ENV: production
    ports:
      - "4000:4000"
    restart: always
    environment:
      NODE_ENV: production
      DATABASE_URL: postgres://${POSTGRES_USERNAME}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      AUTH_JWT_SECRET: ${AUTH_JWT_SECRET}
    depends_on:
      - postgres
  graphql-engine:
    image: hasura/graphql-engine:v2.0.7
    ports:
      - "8080:8080"
    depends_on:
      - "postgres"
      - "business-logic"
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://${POSTGRES_USERNAME}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://${POSTGRES_USERNAME}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      # enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "false" # set to "false" to disable console
      # enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      # uncomment next line to set an admin secret
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: anonymous
      HASURA_GRAPHQL_JWT_SECRET: |
        {
          "type": "HS256",
          "key": "${AUTH_JWT_SECRET}",
          "claims_namespace": "x-hasura",
          "claims_format": "json"
        }
