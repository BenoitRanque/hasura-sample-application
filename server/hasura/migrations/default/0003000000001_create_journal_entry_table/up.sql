CREATE TABLE public.journal_entry_history (
    id INTEGER NOT NULL,
    description TEXT,
    transaction_timestamp TIMESTAMP WITH TIME ZONE NOT NULL,
    created_by_user_id INTEGER,
    updated_by_user_id INTEGER,
    deleted_by_user_id INTEGER,
    sys_period TSTZRANGE NOT NULL,
    EXCLUDE USING gist (id WITH =, sys_period WITH &&)
);

CREATE TABLE public.journal_entry (
    id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    PRIMARY KEY (id),
    FOREIGN KEY (created_by_user_id) REFERENCES public.user (id) ON UPDATE RESTRICT ON DELETE RESTRICT,
    FOREIGN KEY (updated_by_user_id) REFERENCES public.user (id) ON UPDATE RESTRICT ON DELETE RESTRICT,
    FOREIGN KEY (deleted_by_user_id) REFERENCES public.user (id) ON UPDATE RESTRICT ON DELETE RESTRICT
) INHERITS (public.journal_entry_history);

-- triggers run in alphabetical order, numbers in their name ensure proper execution order
CREATE TRIGGER trigger_001_supress_redundant_updates
BEFORE UPDATE ON public.journal_entry
FOR EACH ROW EXECUTE FUNCTION suppress_redundant_updates_trigger();

CREATE TRIGGER trigger_002_versioning
BEFORE INSERT OR UPDATE OR DELETE ON public.journal_entry
FOR EACH ROW EXECUTE FUNCTION versioning('sys_period', 'public.journal_entry_history', true);

COMMENT ON TABLE  public.journal_entry                                   IS 'Journal Entry';
COMMENT ON COLUMN public.journal_entry.id                                IS 'Primary key';
COMMENT ON COLUMN public.journal_entry.description                       IS 'Description for the entry';
COMMENT ON COLUMN public.journal_entry.transaction_timestamp             IS 'When the transaction happened. Not necesarily the same as when the transaction was registered to the system.';

COMMENT ON COLUMN public.journal_entry.created_by_user_id                IS 'id of user who created this record';
COMMENT ON COLUMN public.journal_entry.updated_by_user_id                IS 'id of user who updated this record';
COMMENT ON COLUMN public.journal_entry.deleted_by_user_id                IS 'id of user who deleted this record';
COMMENT ON COLUMN public.journal_entry.sys_period                        IS 'Effective system period for this record. Use in conjunction with primary key to retrieve past versions from history table';


COMMENT ON TABLE  public.journal_entry_history                           IS 'Journal Entry History';
COMMENT ON COLUMN public.journal_entry_history.id                        IS 'Primary key';
COMMENT ON COLUMN public.journal_entry_history.description               IS 'Description for the entry';
COMMENT ON COLUMN public.journal_entry_history.transaction_timestamp     IS 'When the transaction happened. Not necesarily the same as when the transaction was registered to the system.';

COMMENT ON COLUMN public.journal_entry_history.created_by_user_id        IS 'id of user who created this record';
COMMENT ON COLUMN public.journal_entry_history.updated_by_user_id        IS 'id of user who updated this record';
COMMENT ON COLUMN public.journal_entry_history.deleted_by_user_id        IS 'id of user who deleted this record';
COMMENT ON COLUMN public.journal_entry_history.sys_period                IS 'Effective system period for this record. Use in conjunction with primary key to retrieve past versions from history table';

